# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2023-06-02 21:32:14 krylon>
#
#+TAGS: optimize(o) refactor(r) bug(b) feature(f) architecture(a)
#+TAGS: web(w) database(d) javascript(j)
#+TODO: TODO(t) IMPLEMENT(i) TEST(e) RESEARCH(r) | DONE(d)
#+TODO: MEDITATE(m) PLANNING(p) REFINE(n) | FAILED(f) CANCELLED(c) SUSPENDED(s)
#+TODO: EXPERIMENT(x) |
#+PRIORITIES: A G D

* uptimed
  Uptimed is an application to keep track of the uptime and system load of
  several systems and watch the recorded data in a web interface.
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 20
   #+CAPTION: Clock summary at [2023-06-02 Fr 17:58]
   | Headline             | Time   |      |      |
   |----------------------+--------+------+------|
   | *Total time*         | *4:43* |      |      |
   |----------------------+--------+------+------|
   | uptimed              | 4:43   |      |      |
   | \_  Components [0/0] |        | 4:43 |      |
   | \_    Database [0/0] |        |      | 4:43 |
   #+END:
** Components [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Database [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2023-06-02 Fr 17:57]--[2023-06-02 Fr 17:58] =>  0:01
    CLOCK: [2023-06-02 Fr 16:40]--[2023-06-02 Fr 16:59] =>  0:19
    CLOCK: [2023-06-02 Fr 10:12]--[2023-06-02 Fr 10:51] =>  0:39
    CLOCK: [2023-06-02 Fr 09:35]--[2023-06-02 Fr 10:00] =>  0:25
    CLOCK: [2023-06-01 Do 18:33]--[2023-06-01 Do 21:52] =>  3:19
    :END:
    I'm not sure I want to use SQLite *again*, maybe I should give nutsdb a
    try. It has transactions, runs embedded, and it's written in pure Go.
    On the other hand, SQLite just works, and it takes care of so many
    problems.
    *sigh* I'm going to use SQLite. There is no reason /not/ to use it,
    really.
*** Server [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2023-06-02 Fr 19:22]--[2023-06-02 Fr 21:32] =>  2:10
    CLOCK: [2023-06-02 Fr 17:58]--[2023-06-02 Fr 19:14] =>  1:16
    :END:
    I'm going to use a web server both for the frontend and for the
    client-server communication. I'll need the web server anyway, might as
    well use it for the clients instead of hand-rolling some half-baked
    protocol myself.
*** Client [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    The client should be relatively straightforward, I think. I'm going to
    start here and work on gathering the data required.
** Bugs [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Notes
